name: Build Ledger DB

on:
  pull_request:
    branches: [master]
    # paths:
    #   - 'src/accounts-db/*'
  push:
    branches: [master]
    # paths:
    #   - 'src/accounts-db/*'

env:
  REPO_NAME: vre/ledgerdb
  KUBE_PREFIX: ./kube
  KUBE_IMAGE_FILE: ledgerdb/statefulset.yaml
  SRC_PREFIX: ./app
  SRC_DIR: src/ledger-db
  REGISTRY: 593393184947.dkr.ecr.us-east-1.amazonaws.com # can't pass this betwen jobs

jobs:
  build:
      name: Upload to ECR
      runs-on: self-hosted

      outputs:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}

      steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          path: ${{ env.SRC_PREFIX }}

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@master
        with:
          aws-region: us-east-1
          role-duration-seconds: 3599

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

        # Create repository, do nothing if it exists
      - name: Create Repository
        uses: int128/create-ecr-repository-action@v1
        with:
          repository: ${{ env.REPO_NAME }}

      - name: Build, tag, and push to ECR
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: ${{ env.REPO_NAME }}
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG ${{ env.SRC_PREFIX}}/${{ env.SRC_DIR }}
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

  deploy:
    name: Deploy to EKS
    runs-on: self-hosted
    needs: build

    steps:
      - name: checkout kube
        uses: actions/checkout@v2
        with:
          repository: HackSafemoon/bom-deploy
          token: ${{ secrets.GH_TOKEN }}
          ref: master

      - name: update manifest
        env:
          ECR_REGISTRY: ${{ env.REGISTRY }}
          ECR_REPOSITORY: ${{ env.REPO_NAME }}
          IMAGE_TAG: ${{ github.sha }}
        run: |
          echo $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          sed -i 's|image: '$ECR_REGISTRY'/'$ECR_REPOSITORY':\(.*\)|image: '$ECR_REGISTRY'/'$ECR_REPOSITORY':'$IMAGE_TAG'|g' ./${{ env.KUBE_IMAGE_FILE }}
          cat ./${{ env.KUBE_IMAGE_FILE }}

      - name: update kube
        run: |
          ls
          git add .
          git commit -m "updating ${{ env.REPO_NAME }} image"
          git push
